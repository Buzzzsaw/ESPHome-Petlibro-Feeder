substitutions:
  name: petlibro-feeder-0

esphome:
  name: ${name}

esp8266:
  board: d1_mini

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: !secret ip_petlibrofeeder_0
    gateway: !secret ip_gateway
    subnet: !secret ip_subnet
  ap:
    ssid: "${name}-AP"
    password: !secret wifi_password
    ap_timeout: 3min

captive_portal:

logger:

api:

ota:

globals:
  - id: button_counter
    type: int
    initial_value: '0'

button:
  - platform: template
    name: "Feed"
    icon: "mdi:cat"
    on_press:
      - lambda: |-
            id(motor_output).set_level(id(motor_speed).state);
            id(button_counter) = 0;

number:
  - platform: template
    id: target_portions
    name: "Portions"
    icon: mdi:counter
    step: 1
    min_value: 1
    max_value: 10
    optimistic: true
  - platform: template
    id: motor_speed
    name: "Motor Speed"
    icon: mdi:speedometer
    step: 0.01
    min_value: 0.01
    max_value: 1.00
    optimistic: true
  - platform: template
    id: empty_distance
    name: "Empty Distance"
    icon: mdi:arrow-expand-vertical
    step: 0.01
    min_value: 0.01
    max_value: 1.00
    optimistic: true

output:
  - platform: esp8266_pwm
    id: motor_output
    pin: D2

binary_sensor:
  - platform: gpio
    id: encoder_switch
    name: "Encoder"
    pin:
      number: D1
      mode: INPUT_PULLUP
    filters:
      - delayed_on:  10ms
      - delayed_off: 10ms
    on_press:
      then:
        - lambda: |-
            id(button_counter) += 1;
            if (id(button_counter) >= id(target_portions).state) {
              id(motor_output).turn_off();
              id(button_counter) = 0;
            }

sensor:
  - platform: ultrasonic
    name: "Food Level"
    icon: mdi:gauge
    trigger_pin: D6
    echo_pin: D5
    update_interval: 60s
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    filters:
      - lambda: return 100.0 * (id(empty_distance).state - x) / id(empty_distance).state;
